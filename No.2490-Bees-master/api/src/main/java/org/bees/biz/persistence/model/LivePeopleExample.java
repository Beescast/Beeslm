package org.bees.biz.persistence.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class LivePeopleExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	protected int limitStart;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	protected int limitEnd;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	protected String groupByClause;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public LivePeopleExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public void setLimitStart(int limitStart) {
		this.limitStart = limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public int getLimitStart() {
		return limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public void setLimitEnd(int limitEnd) {
		this.limitEnd = limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public int getLimitEnd() {
		return limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public void setGroupByClause(String groupByClause) {
		this.groupByClause = groupByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public String getGroupByClause() {
		return groupByClause;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUidIsNull() {
			addCriterion("uid is null");
			return (Criteria) this;
		}

		public Criteria andUidIsNotNull() {
			addCriterion("uid is not null");
			return (Criteria) this;
		}

		public Criteria andUidEqualTo(Integer value) {
			addCriterion("uid =", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotEqualTo(Integer value) {
			addCriterion("uid <>", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThan(Integer value) {
			addCriterion("uid >", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualTo(Integer value) {
			addCriterion("uid >=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThan(Integer value) {
			addCriterion("uid <", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualTo(Integer value) {
			addCriterion("uid <=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidIn(List<Integer> values) {
			addCriterion("uid in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotIn(List<Integer> values) {
			addCriterion("uid not in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidBetween(Integer value1, Integer value2) {
			addCriterion("uid between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotBetween(Integer value1, Integer value2) {
			addCriterion("uid not between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andDatesIsNull() {
			addCriterion("dates is null");
			return (Criteria) this;
		}

		public Criteria andDatesIsNotNull() {
			addCriterion("dates is not null");
			return (Criteria) this;
		}

		public Criteria andDatesEqualTo(Date value) {
			addCriterionForJDBCDate("dates =", value, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesNotEqualTo(Date value) {
			addCriterionForJDBCDate("dates <>", value, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesGreaterThan(Date value) {
			addCriterionForJDBCDate("dates >", value, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("dates >=", value, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesLessThan(Date value) {
			addCriterionForJDBCDate("dates <", value, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("dates <=", value, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesIn(List<Date> values) {
			addCriterionForJDBCDate("dates in", values, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesNotIn(List<Date> values) {
			addCriterionForJDBCDate("dates not in", values, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("dates between", value1, value2, "dates");
			return (Criteria) this;
		}

		public Criteria andDatesNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("dates not between", value1, value2,
					"dates");
			return (Criteria) this;
		}

		public Criteria andVisitTypeIsNull() {
			addCriterion("visit_type is null");
			return (Criteria) this;
		}

		public Criteria andVisitTypeIsNotNull() {
			addCriterion("visit_type is not null");
			return (Criteria) this;
		}

		public Criteria andVisitTypeEqualTo(String value) {
			addCriterion("visit_type =", value, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeNotEqualTo(String value) {
			addCriterion("visit_type <>", value, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeGreaterThan(String value) {
			addCriterion("visit_type >", value, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeGreaterThanOrEqualTo(String value) {
			addCriterion("visit_type >=", value, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeLessThan(String value) {
			addCriterion("visit_type <", value, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeLessThanOrEqualTo(String value) {
			addCriterion("visit_type <=", value, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeLike(String value) {
			addCriterion("visit_type like", value, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeNotLike(String value) {
			addCriterion("visit_type not like", value, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeIn(List<String> values) {
			addCriterion("visit_type in", values, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeNotIn(List<String> values) {
			addCriterion("visit_type not in", values, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeBetween(String value1, String value2) {
			addCriterion("visit_type between", value1, value2, "visitType");
			return (Criteria) this;
		}

		public Criteria andVisitTypeNotBetween(String value1, String value2) {
			addCriterion("visit_type not between", value1, value2, "visitType");
			return (Criteria) this;
		}

		public Criteria andAgeIsNull() {
			addCriterion("age is null");
			return (Criteria) this;
		}

		public Criteria andAgeIsNotNull() {
			addCriterion("age is not null");
			return (Criteria) this;
		}

		public Criteria andAgeEqualTo(Integer value) {
			addCriterion("age =", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotEqualTo(Integer value) {
			addCriterion("age <>", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeGreaterThan(Integer value) {
			addCriterion("age >", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeGreaterThanOrEqualTo(Integer value) {
			addCriterion("age >=", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeLessThan(Integer value) {
			addCriterion("age <", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeLessThanOrEqualTo(Integer value) {
			addCriterion("age <=", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeIn(List<Integer> values) {
			addCriterion("age in", values, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotIn(List<Integer> values) {
			addCriterion("age not in", values, "age");
			return (Criteria) this;
		}

		public Criteria andAgeBetween(Integer value1, Integer value2) {
			addCriterion("age between", value1, value2, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotBetween(Integer value1, Integer value2) {
			addCriterion("age not between", value1, value2, "age");
			return (Criteria) this;
		}

		public Criteria andSexIsNull() {
			addCriterion("sex is null");
			return (Criteria) this;
		}

		public Criteria andSexIsNotNull() {
			addCriterion("sex is not null");
			return (Criteria) this;
		}

		public Criteria andSexEqualTo(Byte value) {
			addCriterion("sex =", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotEqualTo(Byte value) {
			addCriterion("sex <>", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThan(Byte value) {
			addCriterion("sex >", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThanOrEqualTo(Byte value) {
			addCriterion("sex >=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThan(Byte value) {
			addCriterion("sex <", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThanOrEqualTo(Byte value) {
			addCriterion("sex <=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexIn(List<Byte> values) {
			addCriterion("sex in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotIn(List<Byte> values) {
			addCriterion("sex not in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexBetween(Byte value1, Byte value2) {
			addCriterion("sex between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotBetween(Byte value1, Byte value2) {
			addCriterion("sex not between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andFocusIsNull() {
			addCriterion("focus is null");
			return (Criteria) this;
		}

		public Criteria andFocusIsNotNull() {
			addCriterion("focus is not null");
			return (Criteria) this;
		}

		public Criteria andFocusEqualTo(String value) {
			addCriterion("focus =", value, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusNotEqualTo(String value) {
			addCriterion("focus <>", value, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusGreaterThan(String value) {
			addCriterion("focus >", value, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusGreaterThanOrEqualTo(String value) {
			addCriterion("focus >=", value, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusLessThan(String value) {
			addCriterion("focus <", value, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusLessThanOrEqualTo(String value) {
			addCriterion("focus <=", value, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusLike(String value) {
			addCriterion("focus like", value, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusNotLike(String value) {
			addCriterion("focus not like", value, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusIn(List<String> values) {
			addCriterion("focus in", values, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusNotIn(List<String> values) {
			addCriterion("focus not in", values, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusBetween(String value1, String value2) {
			addCriterion("focus between", value1, value2, "focus");
			return (Criteria) this;
		}

		public Criteria andFocusNotBetween(String value1, String value2) {
			addCriterion("focus not between", value1, value2, "focus");
			return (Criteria) this;
		}

		public Criteria andMostTypeIsNull() {
			addCriterion("most_type is null");
			return (Criteria) this;
		}

		public Criteria andMostTypeIsNotNull() {
			addCriterion("most_type is not null");
			return (Criteria) this;
		}

		public Criteria andMostTypeEqualTo(Integer value) {
			addCriterion("most_type =", value, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeNotEqualTo(Integer value) {
			addCriterion("most_type <>", value, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeGreaterThan(Integer value) {
			addCriterion("most_type >", value, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("most_type >=", value, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeLessThan(Integer value) {
			addCriterion("most_type <", value, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeLessThanOrEqualTo(Integer value) {
			addCriterion("most_type <=", value, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeIn(List<Integer> values) {
			addCriterion("most_type in", values, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeNotIn(List<Integer> values) {
			addCriterion("most_type not in", values, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeBetween(Integer value1, Integer value2) {
			addCriterion("most_type between", value1, value2, "mostType");
			return (Criteria) this;
		}

		public Criteria andMostTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("most_type not between", value1, value2, "mostType");
			return (Criteria) this;
		}

		public Criteria andAddTimeIsNull() {
			addCriterion("add_time is null");
			return (Criteria) this;
		}

		public Criteria andAddTimeIsNotNull() {
			addCriterion("add_time is not null");
			return (Criteria) this;
		}

		public Criteria andAddTimeEqualTo(Date value) {
			addCriterion("add_time =", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeNotEqualTo(Date value) {
			addCriterion("add_time <>", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeGreaterThan(Date value) {
			addCriterion("add_time >", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("add_time >=", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeLessThan(Date value) {
			addCriterion("add_time <", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeLessThanOrEqualTo(Date value) {
			addCriterion("add_time <=", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeIn(List<Date> values) {
			addCriterion("add_time in", values, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeNotIn(List<Date> values) {
			addCriterion("add_time not in", values, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeBetween(Date value1, Date value2) {
			addCriterion("add_time between", value1, value2, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeNotBetween(Date value1, Date value2) {
			addCriterion("add_time not between", value1, value2, "addTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterion("update_time =", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterion("update_time <>", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterion("update_time >", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time >=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterion("update_time <", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("update_time <=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIn(List<Date> values) {
			addCriterion("update_time in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotIn(List<Date> values) {
			addCriterion("update_time not in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("update_time not between", value1, value2,
					"updateTime");
			return (Criteria) this;
		}

		public Criteria andDelFlagIsNull() {
			addCriterion("del_flag is null");
			return (Criteria) this;
		}

		public Criteria andDelFlagIsNotNull() {
			addCriterion("del_flag is not null");
			return (Criteria) this;
		}

		public Criteria andDelFlagEqualTo(Byte value) {
			addCriterion("del_flag =", value, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagNotEqualTo(Byte value) {
			addCriterion("del_flag <>", value, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagGreaterThan(Byte value) {
			addCriterion("del_flag >", value, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagGreaterThanOrEqualTo(Byte value) {
			addCriterion("del_flag >=", value, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagLessThan(Byte value) {
			addCriterion("del_flag <", value, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagLessThanOrEqualTo(Byte value) {
			addCriterion("del_flag <=", value, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagIn(List<Byte> values) {
			addCriterion("del_flag in", values, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagNotIn(List<Byte> values) {
			addCriterion("del_flag not in", values, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagBetween(Byte value1, Byte value2) {
			addCriterion("del_flag between", value1, value2, "delFlag");
			return (Criteria) this;
		}

		public Criteria andDelFlagNotBetween(Byte value1, Byte value2) {
			addCriterion("del_flag not between", value1, value2, "delFlag");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table live_people
	 * @mbggenerated  Fri Aug 26 17:28:28 GMT+08:00 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table live_people
     *
     * @mbggenerated do_not_delete_during_merge Fri Aug 26 17:28:07 GMT+08:00 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}